basePath: /
definitions:
  model.AddNodeReq:
    properties:
      ips:
        example:
        - 192.168.0.1
        - 192.168.0.2
        items:
          type: string
        type: array
      shard:
        example: 3
        type: integer
    type: object
  model.AlterCkTableReq:
    properties:
      add:
        items:
          $ref: '#/definitions/model.CkTableNameTypeAfter'
        type: array
      add_indexes:
        items:
          $ref: '#/definitions/model.Index'
        type: array
      database:
        example: default
        type: string
      dist_name:
        type: string
      drop:
        example:
        - age
        items:
          type: string
        type: array
      drop_indexes:
        items:
          $ref: '#/definitions/model.Index'
        type: array
      modify:
        items:
          $ref: '#/definitions/model.CkTableNameType'
        type: array
      name:
        example: test_table
        type: string
      projections:
        items:
          $ref: '#/definitions/model.Projection'
        type: array
      rename:
        items:
          $ref: '#/definitions/model.CkTableRename'
        type: array
    type: object
  model.AlterTblTTL:
    properties:
      database:
        example: default
        type: string
      distName:
        example: distt1
        type: string
      tableName:
        example: t1
        type: string
    type: object
  model.AlterTblsTTLReq:
    properties:
      tables:
        items:
          $ref: '#/definitions/model.AlterTblTTL'
        type: array
      ttl:
        items:
          $ref: '#/definitions/model.CkTableTTL'
        type: array
      ttl_type:
        example: MODIFY
        type: string
    type: object
  model.ArchiveHdfs:
    properties:
      addr:
        example: localhost:8020
        type: string
      dir:
        example: /data01
        type: string
      user:
        example: hdfs
        type: string
    type: object
  model.ArchiveLocal:
    properties:
      Path:
        example: /data01/clickhouse/backup/
        type: string
    type: object
  model.ArchiveS3:
    properties:
      AccessKeyID:
        example: KZOqVTra982w51MK
        type: string
      Bucket:
        example: ckman.backup
        type: string
      Compression:
        description: none, gzip/gz, brotli/br, xz/LZMA, zstd/zst
        example: gzip
        type: string
      Endpoint:
        example: http://192.168.110.8:49000
        type: string
      Region:
        example: zh-west-1
        type: string
      SecretAccessKey:
        example: 7Zsdaywu7i5C2AyvLkbupSyVlIzP8qJ0
        type: string
    type: object
  model.ArchiveTableReq:
    properties:
      begin:
        description: include
        example: "2021-01-01"
        type: string
      database:
        example: default
        type: string
      end:
        description: exclude
        example: "2021-04-01"
        type: string
      format:
        description: pq, csv, orc
        type: string
      hdfs:
        $ref: '#/definitions/model.ArchiveHdfs'
      local:
        $ref: '#/definitions/model.ArchiveLocal'
      maxfilesize:
        example: 10000000000
        type: integer
      s3:
        $ref: '#/definitions/model.ArchiveS3'
      tables:
        example:
        - t1
        - t2
        - t3
        items:
          type: string
        type: array
      target:
        description: hdfs, local, remote
        example: hdfs
        type: string
    type: object
  model.CKManClickHouseConfig:
    properties:
      authenticateType:
        example: 0
        type: integer
      cluster:
        example: test
        type: string
      comment:
        example: test
        type: string
      cwd:
        example: /home/eoi/clickhouse
        type: string
      encryptType:
        type: integer
      expert:
        additionalProperties:
          type: string
        type: object
      hosts:
        example:
        - 192.168.0.1
        - 192.168.0.2
        - 192.168.0.3
        - 192.168.0.4
        items:
          type: string
        type: array
      httpPort:
        example: 8123
        type: integer
      isReplica:
        example: true
        type: boolean
      keeper:
        example: zookeeper
        type: string
      keeperConf:
        $ref: '#/definitions/model.KeeperConf'
      logic_cluster:
        example: logic_test
        type: string
      password:
        example: "123456"
        type: string
      path:
        example: /var/lib/
        type: string
      pkgName:
        example: clickhouse-common-static-22.3.3.44.noarch.rpm
        type: string
      pkgType:
        example: x86_64.rpm
        type: string
      port:
        example: 9000
        type: integer
      promHost:
        example: 127.0.0.1
        type: string
      promMetricPort:
        $ref: '#/definitions/model.PromMetricPort'
      promPort:
        example: 9090
        type: integer
      protocol:
        example: native
        type: string
      secure:
        type: boolean
      sshPassword:
        example: "123456"
        type: string
      sshPort:
        example: 22
        type: integer
      sshUser:
        example: root
        type: string
      storage:
        $ref: '#/definitions/model.Storage'
      user:
        example: ck
        type: string
      version:
        example: 21.9.1.7647
        type: string
      zkNodes:
        example:
        - 192.168.0.1
        - 192.168.0.2
        - 192.168.0.3
        items:
          type: string
        type: array
      zkPort:
        example: 2181
        type: integer
    type: object
  model.CkImportConfig:
    properties:
      cluster:
        example: test
        type: string
      hosts:
        example:
        - 192.168.101.105
        - 192.168.101.107
        items:
          type: string
        type: array
      httpPort:
        example: 8123
        type: integer
      logic_cluster:
        example: logic_test
        type: string
      password:
        example: "123456"
        type: string
      port:
        example: 9000
        type: integer
      prom_host:
        example: 127.0.01
        type: string
      prom_port:
        example: 9090
        type: integer
      protocol:
        example: native
        type: string
      secure:
        example: false
        type: boolean
      user:
        example: ck
        type: string
      zkNodes:
        example:
        - 192.168.101.102
        - 192.168.101.105
        - 192.168.101.107
        items:
          type: string
        type: array
      zkPort:
        example: 2181
        type: integer
    type: object
  model.CkTableNameType:
    properties:
      name:
        example: _timestamp
        type: string
      options:
        description: example:["DEFAULT now()", "CODEC(NONE)"]
        items:
          type: string
        type: array
      type:
        example: DateTime
        type: string
    type: object
  model.CkTableNameTypeAfter:
    properties:
      after:
        example: _timestamp
        type: string
      name:
        example: age
        type: string
      options:
        example:
        - DEFAULT now()
        - CODEC(NONE)
        - COMMENT
        - 年龄
        items:
          type: string
        type: array
      type:
        example: Int32
        type: string
    type: object
  model.CkTablePartition:
    properties:
      name:
        example: _timestamp
        type: string
      policy:
        description: |-
          0 split partition by day
          1 split partition by week
          2 split partition by month
        example: 0
        type: integer
    type: object
  model.CkTableRename:
    properties:
      from:
        example: col_old
        type: string
      to:
        example: col_new
        type: string
    type: object
  model.CkTableTTL:
    properties:
      action:
        example: toVolume
        type: string
      interval:
        example: 3
        type: integer
      target:
        example: main
        type: string
      time_column:
        example: _timestamp
        type: string
      unit:
        example: MONTH
        type: string
    type: object
  model.CkUpgradeCkReq:
    properties:
      packageVersion:
        example: 22.3.6.5
        type: string
      policy:
        example: Rolling
        type: string
      skip:
        example: true
        type: boolean
      skipKeeper:
        example: true
        type: boolean
    type: object
  model.Coordination:
    properties:
      autoForwarding:
        type: boolean
      expert:
        additionalProperties:
          type: string
        type: object
      forceSync:
        type: boolean
      operationTimeoutMs:
        type: integer
      sessionTimeoutMs:
        type: integer
    type: object
  model.CreateCkTableReq:
    properties:
      database:
        example: default
        type: string
      dist_table:
        type: string
      distinct:
        example: true
        type: boolean
      dryrun:
        example: false
        type: boolean
      fields:
        items:
          $ref: '#/definitions/model.CkTableNameType'
        type: array
      force_create:
        type: boolean
      indexes:
        items:
          $ref: '#/definitions/model.Index'
        type: array
      name:
        example: test_table
        type: string
      order:
        example:
        - _timestamp
        items:
          type: string
        type: array
      partition:
        $ref: '#/definitions/model.CkTablePartition'
      projections:
        items:
          $ref: '#/definitions/model.Projection'
        type: array
      storage_policy:
        example: external
        type: string
      ttl:
        items:
          $ref: '#/definitions/model.CkTableTTL'
        type: array
    type: object
  model.DMLOnLogicReq:
    properties:
      cond:
        type: string
      database:
        type: string
      kv:
        additionalProperties:
          type: string
        type: object
      manipulation:
        type: string
      table:
        type: string
    type: object
  model.Disk:
    properties:
      allowedBackup:
        example: true
        type: boolean
      diskHdfs:
        $ref: '#/definitions/model.DiskHdfs'
      name:
        example: hdfs1
        type: string
      type:
        example: hdfs
        type: string
    type: object
  model.DiskHdfs:
    properties:
      endpoint:
        example: hdfs://localhost:8020/clickhouse/data/test/
        type: string
    type: object
  model.DistLogicTableReq:
    properties:
      database:
        example: default
        type: string
      dist_name:
        example: dist_table
        type: string
      table_name:
        example: test_table
        type: string
    type: object
  model.GetLogReq:
    properties:
      lines:
        example: 1000
        type: integer
      logType:
        example: normal
        type: string
      tail:
        example: true
        type: boolean
    type: object
  model.GroupUniqArrayField:
    properties:
      defaultValue:
        description: 默认值
        type: string
      maxSize:
        description: 聚合条数
        type: integer
      name:
        description: 字段名
        type: string
    type: object
  model.GroupUniqArrayReq:
    properties:
      database:
        description: 数据库
        type: string
      fields:
        description: 聚合字段
        items:
          $ref: '#/definitions/model.GroupUniqArrayField'
        type: array
      populate:
        description: 是否要同步存量数据
        type: boolean
      table:
        description: 原始表名
        type: string
      timeField:
        description: 时间字段
        type: string
    type: object
  model.Index:
    properties:
      field:
        type: string
      granularity:
        type: integer
      name:
        type: string
      type:
        description: minmax, set, bloom_filter, ngrambf_v1, tokenbf_v1
        type: string
    type: object
  model.KeeperConf:
    properties:
      coordination:
        $ref: '#/definitions/model.Coordination'
      expert:
        additionalProperties:
          type: string
        type: object
      keeperNodes:
        example:
        - 192.168.101.102
        - 192.168.101.105
        - 192.168.101.107
        items:
          type: string
        type: array
      path:
        type: string
      raftPort:
        example: 9234
        type: integer
      runtime:
        example: standalone
        type: string
      tcpPort:
        example: 9181
        type: integer
    type: object
  model.LoginReq:
    properties:
      password:
        example: 63cb91a2ceb9d4f7c8b1ba5e50046f52
        type: string
      username:
        example: ckman
        type: string
    type: object
  model.MaterializedViewReq:
    properties:
      database:
        type: string
      dryrun:
        type: boolean
      engine:
        type: string
      name:
        type: string
      operate:
        type: integer
      order:
        items:
          type: string
        type: array
      partition:
        $ref: '#/definitions/model.CkTablePartition'
      populate:
        type: boolean
      statement:
        type: string
    type: object
  model.OrderbyReq:
    properties:
      database:
        type: string
      dist_name:
        type: string
      orderby:
        items:
          type: string
        type: array
      partitionby:
        $ref: '#/definitions/model.CkTablePartition'
      table:
        type: string
    type: object
  model.PingClusterReq:
    properties:
      password:
        example: "123456"
        type: string
      user:
        example: ck
        type: string
    type: object
  model.Policy:
    properties:
      moveFactor:
        example: 0.1
        type: number
      name:
        example: hdfs_only
        type: string
      volumns:
        items:
          $ref: '#/definitions/model.Volumn'
        type: array
    type: object
  model.Projection:
    properties:
      action:
        type: integer
      name:
        type: string
      sql:
        type: string
    type: object
  model.PromMetricPort:
    properties:
      clickhouse:
        example: 9363
        type: integer
      node_export:
        example: 9100
        type: integer
      zookeeper:
        example: 7000
        type: integer
    type: object
  model.PurgerTableReq:
    properties:
      begin:
        example: "2021-01-01"
        type: string
      database:
        example: default
        type: string
      end:
        example: "2021-04-01"
        type: string
      tables:
        example:
        - t1
        - t2
        - t3
        items:
          type: string
        type: array
    type: object
  model.RebalanceTableReq:
    properties:
      except_max_shard:
        description: remove the max shard's data to other shards
        type: boolean
      tables:
        items:
          $ref: '#/definitions/model.RebalanceTables'
        type: array
    type: object
  model.RebalanceTables:
    properties:
      allowLossRate:
        example: 0.1
        type: number
      database:
        example: default
        type: string
      policy:
        example: patition, shardingkey
        type: string
      saveTemps:
        example: true
        type: boolean
      shardingKey:
        example: _timestamp
        type: string
      table:
        example: t123
        type: string
    type: object
  model.Storage:
    properties:
      disks:
        items:
          $ref: '#/definitions/model.Disk'
        type: array
      policies:
        items:
          $ref: '#/definitions/model.Policy'
        type: array
    type: object
  model.Volumn:
    properties:
      disks:
        description: Every disk shall be in storage.Disks
        example:
        - default
        - hdfs1
        items:
          type: string
        type: array
      maxDataPartSizeBytes:
        example: 10000000
        type: integer
      name:
        example: main
        type: string
      preferNotToMerge:
        example: "true"
        type: string
    type: object
info:
  contact: {}
  title: CKMAN API
  version: "2.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.LoginReq'
      responses:
        "200":
          description: '{"retCode":"5031", "retMsg":"密码校验失败", "data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户登录
      tags:
      - user
  /api/logout:
    put:
      consumes:
      - application/json
      description: Logout
      responses:
        "200":
          description: '{"retCode":"0000","retMsg":"成功","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 退出登录
      tags:
      - user
  /api/v2/ck/archive/{clusterName}:
    post:
      consumes:
      - application/json
      description: 按时间段备份表数据
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.ArchiveTableReq'
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 备份表
      tags:
      - clickhouse
  /api/v2/ck/cluster:
    get:
      consumes:
      - application/json
      description: 获取所有集群的信息
      responses:
        "200":
          description: '{"code":"5804","msg":"数据查询失败","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有集群信息
      tags:
      - clickhouse
    post:
      consumes:
      - application/json
      description: 将一个已经存在的集群导入到ckman
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.CkImportConfig'
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 导入集群
      tags:
      - clickhouse
  /api/v2/ck/cluster/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 删除一个集群，但是并没有销毁该集群
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"5800","msg":"数据查询失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除集群
      tags:
      - clickhouse
    get:
      consumes:
      - application/json
      description: 根据集群名获取集群的信息
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok", "data":{"mode":"import","hosts":["192.168.0.1","192.168.0.2","192.168.0.3","192.168.0.4"],"names":["node1","node2","node3","node4"],"port":9000,"httpPort":8123,"user":"ck","password":"123456","database":"default","cluster":"test","zkNodes":["192.168.0.1","192.168.0.2","192.168.0.3"],"zkPort":2181,"isReplica":true,"version":"20.8.5.45","sshUser":"","sshPassword":"","shards":[{"replicas":[{"ip":"192.168.0.1","hostname":"node1"},{"ip":"192.168.0.2","hostname":"node2"}]},{"replicas":[{"ip":"192.168.0.3","hostname":"node3"},{"ip":"192.168.0.4","hostname":"node4"}]}],"path":""}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定的集群信息
      tags:
      - clickhouse
  /api/v2/ck/config/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取集群配置
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.ArchiveTableReq'
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":nil}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取集群配置
      tags:
      - clickhouse
    post:
      consumes:
      - application/json
      description: 修改集群配置
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.ArchiveTableReq'
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":nil}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改集群配置
      tags:
      - clickhouse
  /api/v2/ck/ddl_queue/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查询分布式DDL
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"startTime":1609986493,"queryDuration":145,"query":"select
            * from dist_sensor_dt_result_online limit 10000","user":"default","queryId":"8aa3de08-92c4-4102-a83d-2f5d88569dab","address":"::1","threads":2}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询分布式DDL
      tags:
      - clickhouse
  /api/v2/ck/destroy/{clusterName}:
    put:
      consumes:
      - application/json
      description: 销毁集群，删除所有数据，并卸载服务
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 销毁集群
      tags:
      - clickhouse
  /api/v2/ck/dist-logic-table/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 删除逻辑表
      parameters:
      - default: logic_test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.DistLogicTableReq'
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除逻辑表
      tags:
      - clickhouse
    post:
      consumes:
      - application/json
      description: 创建逻辑表，如果某个物理集群上没有本地表，会同步创建
      parameters:
      - default: logic_test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.DistLogicTableReq'
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建逻辑表
      tags:
      - clickhouse
  /api/v2/ck/get/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取集群各个节点的状态
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":{"test":{"mode":"import","hosts":["192.168.0.1","192.168.0.2","192.168.0.3","192.168.0.4"],"names":["node1","node2","node3","node4"],"port":9000,"httpPort":8123,"user":"ck","password":"123456","database":"default","cluster":"test","zkNodes":["192.168.0.1","192.168.0.2","192.168.0.3"],"zkPort":2181,"isReplica":true,"version":"20.8.5.45","sshUser":"","sshPassword":"","shards":[{"replicas":[{"ip":"192.168.0.1","hostname":"node1"},{"ip":"192.168.0.2","hostname":"node2"}]},{"replicas":[{"ip":"192.168.0.3","hostname":"node3"},{"ip":"192.168.0.4","hostname":"node4"}]}],"path":""}}}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取集群状态
      tags:
      - clickhouse
  /api/v2/ck/node/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 删除节点
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      - default: 192.168.101.105
        description: node ip address
        in: query
        name: ip
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除节点
      tags:
      - clickhouse
    post:
      consumes:
      - application/json
      description: 增加集群节点，可对已有shard增加副本，也可直接增加新的shard
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.AddNodeReq'
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加集群节点
      tags:
      - clickhouse
  /api/v2/ck/node/log/{clusterName}:
    post:
      consumes:
      - application/json
      description: 获取clickhouse日志
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GetLogReq'
      - description: password
        in: query
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取clickhouse日志
      tags:
      - clickhouse
  /api/v2/ck/node/start/{clusterName}:
    put:
      consumes:
      - application/json
      description: 将集群内的某一个节点上线
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 上线节点
      tags:
      - clickhouse
  /api/v2/ck/node/stop/{clusterName}:
    put:
      consumes:
      - application/json
      description: 将集群内的某一个节点下线
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 下线节点
      tags:
      - clickhouse
  /api/v2/ck/open-sessions/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查询正在进行的会话
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: "10"
        description: sessions limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"startTime":1609997894,"queryDuration":1,"query":"SELECT
            DISTINCT name FROM system.tables","user":"eoi","queryId":"62dce71d-9294-4e47-9d9b-cf298f73233d","address":"192.168.21.73","threads":2}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询正在进行的会话
      tags:
      - clickhouse
    put:
      consumes:
      - application/json
      description: 终止正在进行的会话
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: host
        in: query
        name: host
        type: string
      - description: query_id
        in: query
        name: query_id
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"startTime":1609997894,"queryDuration":1,"query":"SELECT
            DISTINCT name FROM system.tables","user":"eoi","queryId":"62dce71d-9294-4e47-9d9b-cf298f73233d","address":"192.168.21.73","threads":2}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 终止正在进行的会话
      tags:
      - clickhouse
  /api/v2/ck/partition/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取分区信息
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取分区信息
      tags:
      - clickhouse
  /api/v2/ck/ping/{clusterName}:
    post:
      consumes:
      - application/json
      description: 探测集群是否可以正常对外提供服务
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.PingClusterReq'
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":nil}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Ping集群是否健康
      tags:
      - clickhouse
  /api/v2/ck/purge-tables/{clusterName}:
    post:
      consumes:
      - application/json
      description: 删除表某个时间范围内的数据
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.PurgerTableReq'
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除表某个时间范围内的数据
      tags:
      - clickhouse
  /api/v2/ck/query-explain/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查看执行计划
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 执行计划
      tags:
      - clickhouse
  /api/v2/ck/query-history/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 删除查询历史
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除查询历史
      tags:
      - clickhouse
    get:
      consumes:
      - application/json
      description: SQL查询历史
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: SQL查询历史
      tags:
      - clickhouse
  /api/v2/ck/query/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查询SQL
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: show databases
        description: sql
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[["name"],["default"],["system"]]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询SQL
      tags:
      - clickhouse
  /api/v2/ck/query_export/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查询SQL
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: show databases
        description: sql
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[["name"],["default"],["system"]]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询SQL
      tags:
      - clickhouse
  /api/v2/ck/rebalance/{clusterName}:
    put:
      consumes:
      - application/json
      description: 均衡集群，可以按照partition和shardingkey均衡，如果没有指定shardingkey，默认按照
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.RebalanceTableReq'
      - default: "true"
        description: if all = true, rebalance all tables, else only rebalance tables
          witch in requests
        in: query
        name: all
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 均衡集群
      tags:
      - clickhouse
  /api/v2/ck/slow-sessions/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查询慢SQL
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: "10"
        description: sessions limit
        in: query
        name: limit
        type: string
      - description: sessions limit
        in: query
        name: start
        type: string
      - description: sessions limit
        in: query
        name: end
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"startTime":1609986493,"queryDuration":145,"query":"select
            * from dist_sensor_dt_result_online limit 10000","user":"default","queryId":"8aa3de08-92c4-4102-a83d-2f5d88569dab","address":"::1","threads":2}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询慢SQL
      tags:
      - clickhouse
  /api/v2/ck/start/{clusterName}:
    put:
      consumes:
      - application/json
      description: 启动集群里所有节点的ck服务，会跳过已经启动的节点
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 启动集群
      tags:
      - clickhouse
  /api/v2/ck/stop/{clusterName}:
    put:
      consumes:
      - application/json
      description: 停止集群内所有节点，会跳过已经停止的节点
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 停止集群
      tags:
      - clickhouse
  /api/v2/ck/table-all/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 删除指定表及其所有关联表，包括本地表，分布式表，逻辑表，物化视图，本地聚合表，分布式聚合表，逻辑聚合表，聚合物化视图
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: default
        description: database name
        in: query
        name: database
        required: true
        type: string
      - default: test_table
        description: table name
        in: query
        name: tableName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除指定表及其所有关联表，包括本地表，分布式表，逻辑表，物化视图， 本地聚合表，分布式聚合表，逻辑聚合表，聚合物化视图
      tags:
      - clickhouse
  /api/v2/ck/table-lists/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取所有的分布式表和逻辑表
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":{\"default\":{\"dist_centers\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_centers111\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_ckcenters\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_ckcenters2\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_logic_centers\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_logic_centers111\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_logic_ckcenters\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"],\"dist_logic_ckcenters2\":[\"@message\",\"@topic\",\"@@id\",\"@rownumber\",\"@ip\",\"@collectiontime\",\"@hostname\",\"@path\",\"@timestamp\",\"@storageTime\"]}}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取分布式表List
      tags:
      - clickhouse
  /api/v2/ck/table-merges/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取表merge指标
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":{"sensor_dt_result_online":{"columns":22,"rows":1381742496,"parts":192,"space":54967700946,"completedQueries":5,"failedQueries":0,"queryCost":{"middle":130,"secondaryMax":160.76,"max":162}}}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取表merge指标
      tags:
      - clickhouse
  /api/v2/ck/table-metric/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取标指标
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: default
        description: filtered by database, if database is empty, select all databases
        in: query
        name: database
        type: string
      - default: columns,partitions,parts,compressed,uncompressed,is_readonly,queries,cost
        description: return columns, if columns is empty, return all columns
        in: query
        name: columns
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":{"sensor_dt_result_online":{"columns":22,"rows":1381742496,"parts":192,"space":54967700946,"completedQueries":5,"failedQueries":0,"queryCost":{"middle":130,"secondaryMax":160.76,"max":162}}}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取表指标
      tags:
      - clickhouse
  /api/v2/ck/table-schema/{clusterName}:
    get:
      consumes:
      - application/json
      description: 查看建表语句
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":"{\"create_table_query\":
            \"CREATE TABLE default.apache_access_log (`@collectiontime` DateTime,
            `@hostname` LowCardinality(String), `@ip` LowCardinality(String), `@path`
            String, `@lineno` Int64, `@message` String, `agent` String, `auth` String,
            `bytes` Int64, `clientIp` String, `device_family` LowCardinality(String),
            `httpversion` LowCardinality(String), `ident` String, `os_family` LowCardinality(String),
            `os_major` LowCardinality(String), `os_minor` LowCardinality(String),
            `referrer` String, `request` String, `requesttime` Float64, `response`
            LowCardinality(String), `timestamp` DateTime64(3), `userAgent_family`
            LowCardinality(String), `userAgent_major` LowCardinality(String), `userAgent_minor`
            LowCardinality(String), `verb` LowCardinality(String), `xforwardfor` LowCardinality(String))
            ENGINE = ReplicatedMergeTree(''/clickhouse/tables/{cluster}/{shard}/default/apache_access_log'',
            ''{replica}'') PARTITION BY toYYYYMMDD(timestamp) ORDER BY (timestamp,
            `@hostname`, `@path`, `@lineno`) SETTINGS index_granularity = 8192 │ ReplicatedMergeTree(''/clickhouse/tables/{cluster}/{shard}/default/apache_access_log'',
            ''{replica}'') PARTITION BY toYYYYMMDD(timestamp) ORDER BY (timestamp,
            `@hostname`, `@path`, `@lineno`) SETTINGS index_granularity = 8192\"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查看建表语句
      tags:
      - clickhouse
  /api/v2/ck/table/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 删除本地表以及分布式表
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: default
        description: database name
        in: query
        name: database
        required: true
        type: string
      - default: test_table
        description: table name
        in: query
        name: tableName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除表
      tags:
      - clickhouse
    get:
      consumes:
      - application/json
      description: 描述表的schema
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - default: default
        description: database name
        in: query
        name: database
        required: true
        type: string
      - default: test_table
        description: table name
        in: query
        name: tableName
        required: true
        type: string
      - default: test_table
        description: table name
        in: query
        name: tableName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"name":"_timestamp","type":"DateTime","defaultType":"","defaultExpression":"","comment":"","codecExpression":"","ttlExpression":""}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 描述表
      tags:
      - clickhouse
    post:
      consumes:
      - application/json
      description: 在集群上创建本地表和分布式表
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.CreateCkTableReq'
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建表
      tags:
      - clickhouse
    put:
      consumes:
      - application/json
      description: 修改表schema
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.AlterCkTableReq'
      responses:
        "200":
          description: '{"code":"5809","msg":"修改表失败","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改表
      tags:
      - clickhouse
  /api/v2/ck/table/dml/{clusterName}:
    post:
      consumes:
      - application/json
      description: 更新/删除表中的数据
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.DMLOnLogicReq'
      responses:
        "200":
          description: '{"code":"5809","msg":"修改表失败","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新/删除表中的数据
      tags:
      - clickhouse
  /api/v2/ck/table/group-uniq-array/{clusterName}:
    delete:
      consumes:
      - application/json
      description: Delete Materialized View with groupUniqArray
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"5810","msg":"删除表失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: DelGroupUniqArray
      tags:
      - clickhouse
    get:
      consumes:
      - application/json
      description: 查询groupUniqArray聚合视图，拿到指定
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"5804","msg":"数据查询失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询groupUniqArray聚合视图
      tags:
      - clickhouse
    post:
      consumes:
      - application/json
      description: 使用groupUniqArray创建本地聚合表，本地物化视图，分布式聚合表，分布式视图
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GroupUniqArrayReq'
      responses:
        "200":
          description: '{"code":"5808","msg":"创建表失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 使用groupUniqArray创建本地聚合表，本地物化视图，分布式聚合表，分布式视图
      tags:
      - clickhouse
  /api/v2/ck/table/orderby/{clusterName}:
    put:
      consumes:
      - application/json
      description: 修改表的order by字段，顺序
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.OrderbyReq'
      responses:
        "200":
          description: '{"code":"5809","msg":"修改表失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改表order by字段
      tags:
      - clickhouse
  /api/v2/ck/table/readonly/{clusterName}:
    put:
      consumes:
      - application/json
      description: 恢复表只读状态
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"5814","msg":"恢复表失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修复表只读状态
      tags:
      - clickhouse
  /api/v2/ck/table/ttl/{clusterName}:
    put:
      consumes:
      - application/json
      description: 修改表TTL
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.AlterTblsTTLReq'
      responses:
        "200":
          description: '{"code":"5809","msg":"修改表失败","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改表TTL
      tags:
      - clickhouse
  /api/v2/ck/table/view/{clusterName}:
    put:
      consumes:
      - application/json
      description: 创建/修改物化视图
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MaterializedViewReq'
      responses:
        "200":
          description: '{"code":"5809","msg":"修改表失败","data":""}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建/修改物化视图
      tags:
      - clickhouse
  /api/v2/ck/truncate-table/{clusterName}:
    delete:
      consumes:
      - application/json
      description: 清空表数据
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.AlterCkTableReq'
      responses:
        "200":
          description: '{"code":"5803","msg":"数据删除失败","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 清空表
      tags:
      - clickhouse
  /api/v2/ck/upgrade/{clusterName}:
    put:
      consumes:
      - application/json
      description: 升级集群，支持全量升级和滚动升级
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: password
        in: query
        name: password
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.CkUpgradeCkReq'
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 升级集群
      tags:
      - clickhouse
  /api/v2/deploy/ck:
    post:
      consumes:
      - application/json
      description: 使用ckman创建集群
      parameters:
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.CKManClickHouseConfig'
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":nil}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建集群
      tags:
      - deploy
  /api/v2/metric/query-range/{clusterName}:
    get:
      consumes:
      - application/json
      description: 通过PromQL查询范围指标，可指定时间段
      parameters:
      - default: ClickHouseMetrics_Read
        description: metric name
        in: query
        name: metric
        required: true
        type: string
      - default: "1606290000"
        description: start time
        in: query
        name: start
        required: true
        type: string
      - default: "1606290120"
        description: end time
        in: query
        name: end
        required: true
        type: string
      - default: "60"
        description: step window
        in: query
        name: step
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"metric":{"__name__":"ClickHouseMetrics_Read","instance":"192.168.101.105:9363","job":"clickhouse_exporter"},"values":[[1606290000,"2"],[1606290060,"2"],[1606290120,"2"]]}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询范围指标
      tags:
      - metrics
  /api/v2/metric/query/{clusterName}:
    get:
      consumes:
      - application/json
      description: 通过promQL查询性能指标
      parameters:
      - default: ClickHouseMetrics_Read
        description: metric name
        in: query
        name: metric
        required: true
        type: string
      - default: "1606290000"
        description: metric time
        in: query
        name: time
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"metric":{"__name__":"ClickHouseMetrics_Read","instance":"192.168.101.105:9363","job":"clickhouse_exporter"},"value":[1606290000,"2"]}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查询性能指标
      tags:
      - metrics
  /api/v2/package:
    delete:
      consumes:
      - application/json
      description: 删除安装包
      parameters:
      - default: 22.3.9.19
        description: package version
        in: query
        name: packageVersion
        required: true
        type: string
      - default: x86_64.rpm
        description: package type
        in: query
        name: pkgType
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除安装包
      tags:
      - package
    get:
      consumes:
      - application/json
      description: 获取安装包列表
      parameters:
      - default: all
        description: pkgType
        in: query
        name: pkgType
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":[{"version":"22.3.9.19","pkgType":"x86_64.rpm","pkgName":"clickhouse-common-static-22.3.9.19.x86_64.rpm"}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取安装包列表
      tags:
      - package
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: 需要同时上传三个包，包括client、server和common
      parameters:
      - description: package
        in: formData
        name: package
        required: true
        type: file
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 上传安装包
      tags:
      - package
  /api/v2/task/{taskId}:
    delete:
      consumes:
      - application/json
      description: 根据任务ID删除指定的任务
      parameters:
      - default: 608e9e83-715e-7448-a149-9bef33f38cfe
        description: taskId
        in: query
        name: taskId
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","msg":nil}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除任务
      tags:
      - task
    get:
      consumes:
      - application/json
      description: 根据任务ID获取任务状态
      parameters:
      - default: 608e9e83-715e-7448-a149-9bef33f38cfe
        description: task id
        in: query
        name: taskId
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":{\"TaskId\":\"608e9e83-715e-7448-a149-9bef33f38cfe\",\"ClusterName\":\"usertest\",\"Type\":\"clickhouse\",\"Option\":{\"ZH\":\"升级集群\",\"EN\":\"Upgrade\"},\"NodeStatus\":[{\"Host\":\"192.168.110.10\",\"Status\":{\"ZH\":\"上传安装包\",\"EN\":\"Prepare\"}},{\"Host\":\"192.168.110.12\",\"Status\":{\"ZH\":\"上传安装包\",\"EN\":\"Prepare\"}},{\"Host\":\"192.168.110.14\",\"Status\":{\"ZH\":\"上传安装包\",\"EN\":\"Prepare\"}}]}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取任务状态
      tags:
      - task
    put:
      consumes:
      - application/json
      description: 停止指定的任务，注意该动作只是修改了任务状态，实际任务并没有停止
      parameters:
      - default: 608e9e83-715e-7448-a149-9bef33f38cfe
        description: taskId
        in: query
        name: taskId
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"success","msg":nil}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 停止任务
      tags:
      - task
  /api/v2/task/lists:
    get:
      consumes:
      - application/json
      description: 获取所有的任务列表
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":[{\"TaskId\":\"608e9e83-715e-7448-a149-9bef33f38cfe\",\"ClusterName\":\"usertest\",\"Type\":\"clickhouse\",\"Option\":{\"ZH\":\"升级集群\",\"EN\":\"Upgrade\"},\"Status\":\"Success\",\"Message\":\"Success\",\"CreateTime\":\"2022-08-15T10:38:52.319504494+08:00\",\"UpdateTime\":\"2022-08-15T10:39:22.177215927+08:00\",\"Duration\":\"29s\"},{\"TaskId\":\"c6ee8843-36ba-4c88-94dd-0f226cdf8377\",\"ClusterName\":\"abc\",\"Type\":\"clickhouse\",\"Option\":{\"ZH\":\"设置集群\",\"EN\":\"Setting\"},\"Status\":\"Success\",\"Message\":\"Success\",\"CreateTime\":\"2022-08-09T14:28:00.697211511+08:00\",\"UpdateTime\":\"2022-08-09T14:28:59.887673161+08:00\",\"Duration\":\"59s\"}]}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取任务列表
      tags:
      - task
  /api/v2/task/running:
    get:
      consumes:
      - application/json
      description: 获取正在运行的任务个数
      responses:
        "200":
          description: '{"code":"0000","msg":"success","data":3}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取正在运行的任务个数
      tags:
      - task
  /api/v2/zk/replicated-table/{clusterName}:
    get:
      consumes:
      - application/json
      description: 获取ReplicatedMergeTree表的log_pointer状态
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"0000","msg":"ok","data":{"header":[["vm101106","vm101108"],["vm102114","vm101110"],["vm102116","vm102115"]],"tables":[{"name":"sensor_dt_result_online","values":[["l1846","f1846"],["l1845","f1845"],["l1846","f1846"]]}]}}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取复制表状态
      tags:
      - zookeeper
  /api/v2/zk/status/{clusterName}:
    get:
      consumes:
      - application/json
      description: 访问8080端口，获取mntr信息
      parameters:
      - default: test
        description: cluster name
        in: path
        name: clusterName
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"5080","msg":"get zk status fail","data":null}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取zookeeper状态
      tags:
      - zookeeper
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
